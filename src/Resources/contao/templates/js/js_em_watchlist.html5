<script>
/**
 * IE Polyfill: CustomEvent
 */
(function () {

    if ( typeof window.CustomEvent === "function" ) return false;

    function CustomEvent ( event, params ) {
        params = params || { bubbles: false, cancelable: false, detail: null };
        var evt = document.createEvent( 'CustomEvent' );
        evt.initCustomEvent( event, params.bubbles, params.cancelable, params.detail );
        return evt;
    }

    window.CustomEvent = CustomEvent;
})();

/**
 * Asynchronous adding of real estate
 *
 * Listen to the following custom events:
 * - watchlist.onChange
 * - watchlist.onDelete
 */
(function() {
    var watchlistChange = new CustomEvent('watchlist.onChange', {detail: {xhr: null, element: null}});
    var watchlistDelete = new CustomEvent('watchlist.onDelete', {detail: {xhr: null, element: null}});

    function serializeWatchlistForm(form) {
        var field, s = [];
        if (typeof form == 'object' && form.nodeName == "FORM") {
            var len = form.elements.length;
            for (i=0; i<len; i++) {
                field = form.elements[i];
                if (field.name && !field.disabled && field.type != 'file' && field.type != 'reset' && field.type != 'submit' && field.type != 'button') {
                    if (field.type == 'select-multiple') {
                        for (j=form.elements[i].options.length-1; j>=0; j--) {
                            if(field.options[j].selected)
                                s[s.length] = encodeURIComponent(field.name) + "=" + encodeURIComponent(field.options[j].value);
                        }
                    } else if ((field.type != 'checkbox' && field.type != 'radio') || field.checked) {
                        s[s.length] = encodeURIComponent(field.name) + "=" + encodeURIComponent(field.value);
                    }
                }
            }
        }
        return s.join('&').replace(/%20/g, '+');
    }

    function modifyModuleWatchlistRedirector(ctx){
        var redirectorElement = document.querySelector('.mod_watchlistRedirector a');

        // count up/down and toggle class for mod_watchlistRedirector module
        if(!!redirectorElement) {
            var count = parseInt(redirectorElement.dataset.count);
            var countElement = document.querySelector('.mod_watchlistRedirector a span');

            if(ctx.stateBefore && count !== 0){
                --count;
            }else if(!ctx.stateBefore){
                ++count;
            }

            redirectorElement.dataset.count = count;

            if(count > 0){
                redirectorElement.classList.add('active');
            }else{
                redirectorElement.classList.remove('active');
            }

            if(!!countElement) {
                countElement.innerHTML = count;
            }
        }
    }

    // default watchlist buttons
    if(!!document.querySelector('.real_estate_watchlist_button button')) {
        var allButtons = document.querySelectorAll('.real_estate_watchlist_button button');
        var excludeWlButtons = document.querySelectorAll('.delete-list .real_estate_watchlist_button button');
        var arrButtons = [], xhr = new XMLHttpRequest();

        // exclude buttons from list with a .delete-list parent
        for (var c=0; c<allButtons.length; c++){
            arrButtons.push(allButtons[c]);

            for (var cx=0; cx<excludeWlButtons.length; cx++){

                if(allButtons[c] === excludeWlButtons[cx]){
                    arrButtons.pop();
                }
            }
        }

        for (var i=0; i<arrButtons.length; i++){
            arrButtons[i].addEventListener('click', function (e) {
                e.preventDefault();

                // set state for handle further events
                e.target.watchlistPreviousState = e.target.classList.contains('active');

                // send xhr
                xhr.open('POST', location.href);
                xhr.setRequestHeader("Content-Type", "application/x-www-form-urlencoded");
                xhr.send(serializeWatchlistForm(e.target.form));
                xhr.stateBefore = e.target.watchlistPreviousState;
                watchlistChange.detail.element = e.target;

                xhr.onload = function (e) {
                    // add xhr event
                    watchlistChange.detail.xhr = e;

                    // modify module watchlist redirector is needed
                    modifyModuleWatchlistRedirector(this);

                    // dispatch custom event
                    document.dispatchEvent(watchlistChange);
                };

                xhr.onerror = function (e) {
                    // add xhr event
                    watchlistChange.detail.xhr = e;

                    // dispatch custom event
                    document.dispatchEvent(watchlistChange);
                };

                e.target.classList.toggle('active');
            });
        }
    }

    // remove from watchlist buttons
    if(!!document.querySelector('.delete-list .real_estate_watchlist_button button')) {
        var deleteButtons = document.querySelectorAll('.delete-list .real_estate_watchlist_button button');
        var dxhr = new XMLHttpRequest();

        for (var i=0; i<deleteButtons.length; i++){
            deleteButtons[i].addEventListener('click', function (e) {
                e.preventDefault();

                // set state for handle further events
                e.target.watchlistPreviousState = e.target.classList.contains('active');

                // send xhr
                dxhr.open('POST', location.href);
                dxhr.setRequestHeader("Content-Type", "application/x-www-form-urlencoded");
                dxhr.send(serializeWatchlistForm(e.target.form));
                dxhr.stateBefore = e.target.watchlistPreviousState;
                watchlistDelete.detail.element = e.target;

                dxhr.onload = function (e) {
                    // add dxhr event
                    watchlistDelete.detail.xhr = e;

                    // modify module watchlist redirector is needed
                    modifyModuleWatchlistRedirector(this);

                    // dispatch custom event
                    document.dispatchEvent(watchlistDelete);
                };

                dxhr.onerror = function (e) {
                    // add dxhr event
                    watchlistDelete.detail.xhr = e;

                    // dispatch custom event
                    document.dispatchEvent(watchlistDelete);
                };
            });
        }
    }
})();
</script>
